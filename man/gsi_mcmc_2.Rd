% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{gsi_mcmc_2}
\alias{gsi_mcmc_2}
\title{MCMC from the simplest GSI model for pi and the individual posterior probabilities}
\usage{
gsi_mcmc_2(SL, Rho_init, Omega_init, lambda_rho, lambda_omega, reps, burn_in,
  sample_int_omega, sample_int_rho, sample_int_PofZ, sample_int_PofR, RU_starts,
  RU_vec, coll2correctRU)
}
\arguments{
\item{SL}{matrix of the scaled likelihoods.  This is should have values for each individual in a column
(going down in the rows are values for different populations).}

\item{Rho_init}{Starting value for the rho vector.}

\item{Omega_init}{Starting value for the omega vector.}

\item{reps}{total number of reps (sweeps) to do.}

\item{burn_in}{how many reps to discard in the beginning when doing the mean calculation. They will still be
returned in the traces if desired}

\item{sample_int_PofZ}{the number of reps between samples being taken for the traces of posterior of each individual's origin. If 0
no trace samples are taken.}

\item{RU_starts}{a vector of length(rho.size()) + 1, where each element delineates the starting index of a reporting unit in RU_vec (last element is total # collections)}

\item{RU_vec}{a vector of collection indices, grouped by reporting unit, with groups delineated in RU_starts}

\item{sample_int_Pi}{the number of reps between samples being taken for Pi traces.  If 0 no trace samples are taken}

\item{miss_coll2RU}{a vector of rates at which each collection is misassigned to a different reporting unit;
in the same order as RU_vec}
}
\description{
Using a matrix of scaled likelihoods this function samples values of pi and the posteriors
for all the individuals.  It returns the output in a list.
}
\examples{
params <- tcf2param_list(alewife, 15)
logl <- geno_logL(params)
SL <- apply(exp(logl), 2, function(x) x/sum(x))
lambda_omega <- rep(1/params$C, params$C)
lambda_rho <- rep(1/(length(params$RU_starts)-1), length(params$RU_starts)-1 )
test_bh_mcmc <- gsi_mcmc_2(SL, lambda_rho, lambda_omega, lambda_rho, lambda_omega, 10000, 2500, 50, 50, 50, 50, params$RU_starts, params$RU_vec)

}

